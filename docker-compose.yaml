version: "3.9"

services:
  api1:
    build: .
    hostname: api1
    expose:
      - "3000"
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "0.5GB"

  api2:
    build: .
    hostname: api2
    expose:
      - "3000"
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "0.5GB"

  nginx:
    image: nginx:latest
    ports:
      - "9999:9999"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    restart: always 
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "0.5GB"

  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    deploy:
      resources:
        limits:
          cpus: "0.75"
          memory: "1.5GB"

volumes:
  pgdata:
